#!/bin/bash
#
# unpack - part of the Arch-Setup project
# Copyright (C) 2023, Scott Wyman, development@scottwyman.me
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


#
# Automatically restores all my files
#
#   This file is meant to be verbose, not efficient 
#

ACTION="Backup existing calcurse data"
CAL_CONFIG="$HOME/.config/calcurse/calcurse.ical"
mkdir -p $HOME/.config/calcurse >/dev/null
calcurse --export > $CAL_CONFIG 2>>/tmp/unpackerrors.log \
    && echo "[SUCCESS] $ACTION" \
    || { echo "[FAIL] $ACTION... wrote error log to /tmp/unpackerrors.log";exit; } 



# Decompress the encrypted archive file
cp host_backup.tar.aes.gz host_backup.tar.aes.gz.bak
gunzip host_backup.tar.aes.gz

# Decrypt the backup
openssl enc -d -a -aes-256-cbc -pbkdf2 --iter 1000000 -in host_backup.tar.aes -out host_backup.tar 2> /dev/null

# Exit if the wrong decryption key is given
[[ $? != 0 ]] && {
    echo "Incorrect Decryption key"
    # Rename the bak file to the origional file name
    mv host_backup.tar.aes.gz.bak host_backup.tar.aes.gz
    # Remove the incorrectly decrypted archive file
    shred -uz host_backup.tar host_backup.tar.aes
    exit
}

# Unpack all my files into the current pwd
tar -xf host_backup.tar

# Remove the unencrypted .tar file
shred -uz host_backup.tar host_backup.tar.aes

# Rename the bak file to the origional file name
mv host_backup.tar.aes.gz.bak host_backup.tar.aes.gz

# rm the existing calcurse data to avoid duplicating data on import below
CAL_DATA="$HOME/.local/share/calcurse"
[[ -d $HOME/.local/share/calcurse ]] && {
    rm -rf $CAL_DATA/notes/* &>/dev/null
    rm $CAL_DATA/apts $CAL_DATA/todo &>/dev/null
}

ACTION="Import ical into calcurse"
CAL_CONFIG="$HOME/.config/calcurse/calcurse.ical"
mkdir -p $HOME/.config/calcurse >/dev/null
cp $CAL_CONFIG $CAL_CONFIG.bak >/dev/null 
calcurse --import $CAL_CONFIG >/dev/null 2>>/tmp/unpackerrors.log \
    && echo "[SUCCESS] $ACTION" \
    || echo "[FAIL] $ACTION... wrote error log to /tmp/unpackerrors.log"
