#!/bin/bash
#
# ssh-swap - part of the Arch-Setup project
# Copyright (C) 2023, Scott Wyman, development@scottwyman.me
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


mkdir -p $HOME/.ssh

# Set the username and IP address of the remote Linux deviceecho -m "
read -p 'Enter the remote username: ' username
read -p 'Enter the remote IP Address: ' ip_address
read -p 'Enter SSH port if not 22: ' ssh_port
[[ -z "$ssh_port" ]] && ssh_port=22 

[[ -z "$username" || -z "$ip_address" || -z "$ssh_port" ]] && {
    echo -e "\n - [ERROR] Must provide a valid username, IP address, and port number - \n"
    exit 1
}

# Generate a new SSH key pair
generate_ssh_key() {
while :
    do
        read -p 'Enter a name for the keyfile: ' key_file
        if [[ -e ~/.ssh/$key_file ]]
        then
            echo -e "\n - keyfile already exists, try another name - \n"
        else
            if ssh-keygen -t rsa -b 4096 -f ~/.ssh/"$key_file"
            then
                echo "SSH key pair generated."
                break
            else
                exit 1
            fi
        fi
    done
}

# Swap SSH keys with the remote device
swap_ssh_keys() {
    if ssh-copy-id -p $ssh_port -i ~/.ssh/"$key_file".pub "$username@$ip_address"
    then
        echo "SSH keys swapped, use this command to connect: "
        echo "ssh -p $ssh_port -i ~/.ssh/$key_file $username@$ip_address"
    else
        echo -e "\n - [ERROR] Failed to swap SSH keys - \n"
        exit 1
    fi
}


generate_ssh_key
swap_ssh_keys
