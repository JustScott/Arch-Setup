#!/bin/bash
# 
# update-status-bar - part of the Arch-Setup project
# Copyright (C) 2023, Scott Wyman, development@scottwyman.me
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


update-status-bar() {
    # Get all batteries with capacities
    batt_array=$(ls /sys/class/power_supply/*/capacity)
    # Take the first battery with a capacity value as the default
    batt_path=$(dirname ${batt_array[0]})
    batt_percentage=$(cat $batt_path/capacity)

    [[ "$(cat $batt_path/status 2> /dev/null)" == "Charging" ]] \
        && charging="+" \
        || charging="-"
    [[ $batt_percentage -gt 99 ]] && { batt_percentage=100; unset charging; } 
    [[ -n $batt_percentage ]] && battery_display=" batt: $charging$batt_percentage% |"

    #
    # Calculates the rx and tx usage of the network
    #
    RX_LOG_FILE=/tmp/net_rx.log
    TX_LOG_FILE=/tmp/net_tx.log

    [[ -f $RX_LOG_FILE ]] || echo "0" > $RX_LOG_FILE
    [[ -f $TX_LOG_FILE ]] || echo "0" > $TX_LOG_FILE

    rx_total=$(( $(cat /sys/class/net/*/statistics/rx_bytes | paste -sd '+') ))
    tx_total=$(( $(cat /sys/class/net/*/statistics/tx_bytes | paste -sd '+') ))
    rx_last=$(cat $RX_LOG_FILE)
    tx_last=$(cat $TX_LOG_FILE)

    rx_current=$(( $rx_total-$rx_last ))
    tx_current=$(( $tx_total-$tx_last ))

    current_combined_usage=$(numfmt --to iec $(( $rx_current+$tx_current )))

    echo $rx_total > $RX_LOG_FILE
    echo $tx_total > $TX_LOG_FILE

    # 
    # Yes, ethernet is suppose to only show if wifi isn't connected to a network
    #
    nmcli_device_output=$(nmcli d)

    if [[ "$nmcli_device_output" =~ "ethernet " ]]
    then
        ethernet_output=$(echo "$nmcli_device_output" | grep 'ethernet ')
        ssid=$(echo "$ethernet_output" | awk '{$1=$2=$3=""; print $0}' | awk '{$1=$1; print}')
        # If the ethernet interface is connected to a network
        [[ $ssid =~ "--" ]] || network_display="eth:$current_combined_usage:$ssid |"
    fi

    if [[ "$nmcli_device_output" =~ "wifi " ]]
    then
        wifi_output=$(echo "$nmcli_device_output" | grep 'wifi ')
        ssid=$(echo "$wifi_output" | awk '{$1=$2=$3=""; print $0}' | awk '{$1=$1; print}')
        # If the wifi interface is connected to a network
        [[ $ssid =~ "--" ]] || network_display="wifi:$current_combined_usage:$ssid |"
    fi

    brightness_percentage=$(brightness)
    [[ -n $brightness_percentage ]] && brightness_display="bri: $brightness_percentage |"
    
    xsetroot -name "$brightness_display vol: $(volume)% |$battery_display $network_display $(date +"%B %e %H:%M")"
}

update-status-bar
