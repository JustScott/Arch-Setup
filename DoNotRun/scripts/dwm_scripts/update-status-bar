#!/bin/bash
# 
# update-status-bar - part of the Arch-Setup project
# Copyright (C) 2023, Scott Wyman, development@scottwyman.me
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


update-status-bar() {
    # Get all batteries with capacities
    batt_array=$(ls /sys/class/power_supply/*/capacity)
    # Take the first battery with a capacity value as the default
    batt_path=$(dirname ${batt_array[0]})
    batt_percentage=$(cat $batt_path/capacity)

    [[ "$(cat $batt_path/status 2> /dev/null)" == "Charging" ]] \
        && charging="+" \
        || charging="-"
    battery_display=" batt: $charging$batt_percentage% |"

    # 
    # Yes, ethernet is suppose to only show if wifi isn't connected to a network
    #
    nmcli_device_output=$(nmcli d)

    [[ "$nmcli_device_output" =~ "ethernet " ]] && {
        ethernet_output=$(echo "$nmcli_device_output" | grep 'ethernet ')
        connection_state=$(echo "$ethernet_output" | awk '{print $3}')
        ssid=$(echo "$ethernet_output" | awk '{$1=$2=$3=""; print $0}' | awk '{$1=$1; print}')
        # If the ethernet interface is connected to a network
        [[ $ssid =~ "--" ]] || {
            network_display="eth:$connection_state:$ssid |"
        }
    }

    [[ "$nmcli_device_output" =~ "wifi " ]] && {
        wifi_output=$(echo "$nmcli_device_output" | grep 'wifi ')
        connection_state=$(echo "$wifi_output" | awk '{print $3}')
        ssid=$(echo "$wifi_output" | awk '{$1=$2=$3=""; print $0}' | awk '{$1=$1; print}')
        # If the wifi interface is connected to a network
        [[ $ssid =~ "--" ]] || {
            network_display="wifi:$connection_state:$ssid |"
        }
    }

    xsetroot -name "bri: $(brightness) | vol: $(volume)% |$battery_display $network_display $(date +"%B %e %H:%M")"
}

update-status-bar
